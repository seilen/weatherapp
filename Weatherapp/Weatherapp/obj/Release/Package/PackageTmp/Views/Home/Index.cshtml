@model IEnumerable<Weatherapp.Models.WeatherModel>

@{
    ViewBag.Title = "Index";
}
@section Scripts {
    @Scripts.Render("~/bundles/knockout")
    <script type="text/javascript">
        @functions{
            public string TokenHeaderValue()
            {
                string cookieToken, formToken;
                AntiForgery.GetTokens(null, out cookieToken, out formToken);
                return cookieToken + ":" + formToken;
            }
        }
        function WeatherViewModel() {
            var self = this;
            self.weather = ko.observableArray([]);
            self.addWeather = function () {
                $.ajax({
                    type: "post",
                    url: "api/weather",
                    data: $("#addWeather").serialize(),
                    datatype: "json",
                    success: function (value) {
                        self.weather.push(value);
                    },
                    headers: {
                        'RequestVerificationToken': '@TokenHeaderValue()'
                    }
                });
            }
            self.removeWeather = function (weather) {
                $.ajax({
                    type: "DELETE",
                    url: weather.Self,
                    success: function () {
                        self.weather.remove(weather);
                    },
                    headers: {
                        'RequestVerificationToken': '@TokenHeaderValue()'
                    }
                });
            }

            $.getJSON("api/weather", function (data) {
                self.weather(data);
            });
        }
        ko.applyBindings(new WeatherViewModel());

    </script>
}
<h2>Index</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.DateAndTime)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.OutdoorTemperatureModel)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.IndoorTemperatureModel)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.WindModel)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.BarometerModel)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.RainfallModel)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.RecentExtremesModel)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Self)
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.DateAndTime)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.OutdoorTemperatureModel)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.IndoorTemperatureModel)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.WindModel)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.BarometerModel)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.RainfallModel)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.RecentExtremesModel)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Self)
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id=item.WeatherModelId }) |
            @Html.ActionLink("Details", "Details", new { id=item.WeatherModelId }) |
            @Html.ActionLink("Delete", "Delete", new { id=item.WeatherModelId })
        </td>
    </tr>
}

</table>
<ul id="weather" data-bind="foreach: weather">
    <li class="ui-widget-content ui-corner-all">
        <h1 data-bind="text: $data.OutdoorTemperatureModel.Temperature" class="ui-widget-header"></h1>
        <div><span data-bind="text: $data.OutdoorTemperatureModel.Temperature || 'OutdoorTemperatureModel.Temperature?'"></span></div>
       
        <p><a data-bind="attr: { href: Self }, click: $root.removeWeather" class="removeWeather ui-state-default ui-corner-all">Remove</a></p>
    </li>
</ul>

<form id="addWeather" data-bind="submit: addWeather">
    <fieldset>
        <legend>Add New Weather</legend>
        <ol>
            <li>
                <label for="OutdoorTemperatureModel.Temperature">OutdoorTemperature</label>
                <input type="text" name="OutdoorTemperature" />
            </li>
            <!--<li>
                <label for="Address">Address</label>
                <input type="text" name="Address">
            </li>
            <li>
                <label for="City">City</label>
                <input type="text" name="City" />
            </li>
            <li>
                <label for="State">State</label>
                <input type="text" name="State" />
            </li>
            <li>
                <label for="Zip">Zip</label>
                <input type="text" name="Zip" />
            </li>
            <li>
                <label for="Email">E-mail</label>
                <input type="text" name="Email" />
            </li>
            <li>
                <label for="Twitter">Twitter</label>
                <input type="text" name="Twitter" />
            </li>-->
        </ol>
        <input type="submit" value="Add" />
    </fieldset>
</form>